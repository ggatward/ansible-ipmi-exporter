---
- name: Install dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ ipmi_exporter_dependencies }}"

- name: Create the ipmi_exporter group
  group:
    name: "{{ ipmi_exporter_system_group }}"
    state: present
    system: true

- name: Create the ipmi_exporter user
  user:
    name: "{{ ipmi_exporter_system_user }}"
    groups: "{{ ipmi_exporter_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /

- name: Download ipmi_exporter binary to local folder
  become: false
  get_url:
    url: "https://github.com/soundcloud/ipmi_exporter/releases/download/v{{ ipmi_exporter_version }}/ipmi_exporter-v{{ ipmi_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp/ipmi_exporter-{{ ipmi_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
#    checksum: "sha256:{{ ipmi_exporter_checksum }}"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false

- name: Unpack ipmi_exporter binary
  become: false
  unarchive:
    src: "/tmp/ipmi_exporter-{{ ipmi_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/ipmi_exporter-v{{ ipmi_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] }}/ipmi_exporter"
  delegate_to: localhost
  check_mode: false

# - name: Unpack ipmi_exporter binary
#   become: false
#   unarchive:
#     src: "files/ipmi_exporter-{{ ipmi_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
#     dest: "/tmp"
#     creates: "/tmp/ipmi_exporter-{{ ipmi_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] }}/ipmi_exporter"
#   delegate_to: localhost
#   check_mode: false

- name: Propagate ipmi_exporter binaries
  copy:
    src: "/tmp/ipmi_exporter-v{{ ipmi_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] }}/ipmi_exporter"
    dest: "/usr/local/bin/ipmi_exporter"
    mode: 0750
    owner: "{{ ipmi_exporter_system_user }}"
    group: "{{ ipmi_exporter_system_group }}"
    setype: bin_t
  notify: restart ipmi_exporter
  when: not ansible_check_mode

- name: Copy the ipmi_exporter systemd service file
  template:
    src: ipmi_exporter.service.j2
    dest: /etc/systemd/system/ipmi_exporter.service
    owner: root
    group: root
    mode: 0644
  notify: restart ipmi_exporter
